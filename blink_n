
class LEDBLINK
{
  public:
    LEDBLINK(int pin)
    {
      _pin = pin;
      pinMode(_pin, OUTPUT);
      digitalWrite(_pin, _value);
    }

    void set_timing()   // You should call this method in setup() before run... 
    {
      unsigned int cnt = 0;
      unsigned long tm_start = millis();
      while ((millis() - tm_start) < 13)    // calculate cpu speed (estimate short time loop count)
      {
        if (tm_start)
        {
          cnt += 1;
        }
      }
      _period = cnt;
      _duty = cnt / 2;
    }

    void toggle()
    {
      _value = !_value;
      digitalWrite(_pin, _value);
    }

    void run()
    {
      _count += 1;
      if (_count == _duty)
      {
        toggle();
      }
      else if (_count == _period)
      {
        _n_blink_cnt -= 1;
        if (_n_blink_cnt)
        {
          _count = 0;
          // do_print('.');
          ledon();
        }
      }
    }

    void ledoff()
    {
      _value = false;
      digitalWrite(_pin, _value);
    }

    void reset(int ntimes)
    {
      _count = 0;
      _n_blink = ntimes;
      _n_blink_cnt = ntimes;
      ledon();
    }

    void repeat()
    {
      _count = 0;
      _n_blink_cnt = _n_blink;
      ledon();
    }

    void ledon()
    {
      _value = true;
      digitalWrite(_pin, _value);
    }
    


  private:
    int _pin, _n_blink = 1;
    int _n_blink_cnt = 1;
    unsigned int _duty = 4000, _period = 10000;
    unsigned int _count = 0;
    bool _value = false;

};


unsigned long tm_now = millis();
unsigned long tm_last_print = 0;

void setup()
{
  ledalarm.set_timing();
  ledalarm.reset(3);
}

void loop()
{
  tm_now = millis();
  if ((tm_now - tm_last_print) > 1000)
  {
    ledalarm.repeat();
    tm_last_print = tm_now;
}
